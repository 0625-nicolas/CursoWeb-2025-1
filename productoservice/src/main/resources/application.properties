spring.application.name=productoservice

# Configuracion del puerto del servicio
server.port=8080

# Configuracion de la base de datos
## Configuracion de la url de la base de datos
Spring.datasource.url=jdbc:postgresql://localhost:5432/curso_springboot
#Configuracion del usuario de la base de datos
spring.datasource.username=devdb
##Configuracion de la contraseña de la base de datos
Spring.datasource.password=Nico_Guti_0625

# configuracion de la persistencia JPA
## Configuracion de la generacion de la base de datos
## Ajustamos la estrategia DDl
## Create-drop: crea la base de datos y la elimina al finalizar la app
## create: crea la base de datos
## update: actualiza la abse de datos
## validate: valida la base de datos
## none: no realiza ninguna accion
spring.jpa.hibernate.ddl-auto=create-drop

## Habilitamos las transacciones durante el render de la vista
spring.jpa.open-in-view=true

# En caso de ser necesario se especifica el dialecto SQL
# spring.jpa.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

## Especificamos que nos muestre las consultas SQL de la terminal
spring.jpa.show-sql=true

## Habilitamos o deshabilitamos las referencias circulares
spring.main.allow-circular-references=true

# Depuracion de la aplicacion
## Podemos tener diferentes niveles de la depuracion tales como:
## DEBUG, INFO, WARN, ERROR, FATAL, OFF

## Habilitamos la depuracion de la aplicacion
#logging.level.org.springframework=DEBUG

## Habilitamos la depuracion de las peticiones web
logging.level.web=DEBUG

## Habilitamos la depuracion de las peticiones SQL
logging.level.org.hibernate.SQL=DEBUG



